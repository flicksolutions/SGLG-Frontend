name: Deploy to GitHub Pages

on:
  push:
    branches: ['upgrade-sveltekit', 'master']
  workflow_dispatch:
  repository_dispatch:
    types: ['deploy']

env:
  PUBLIC_API: ${{ vars.PUBLIC_API }}

jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you're using pnpm, add this step then change the commands and cache key below to use `pnpm`
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
          # BASE_PATH: ''
          NODE_OPTIONS: '--max_old_space_size=9000'
        run: |
          pnpm run build

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          # this should match the `pages` option in your adapter-static options
          path: 'build/'

  deploy:
    needs: build_site
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  report:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Report deployment
        run: echo "Deployed to ${{ needs.deploy.outputs.page_url }}"
      - name: Notify external service (success)
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          curl -sS -X POST \
            -H 'Content-Type: application/json' \
            -d '{"message":"deployment succesfull", "user": "${{ github.event.client_payload.user }}"}' \
            '${{ env.PUBLIC_API }}/flows/trigger/333701d7-8690-4574-a9c2-dfc841e6ccd0'
      - name: Notify external service (failure)
        if: ${{ needs.deploy.result != 'success' }}
        run: |
          curl -sS -X POST \
            -H 'Content-Type: application/json' \
            -d '{"message":"deployment failed", "user": "${{ github.event.client_payload.user }}"}' \
            '${{ env.PUBLIC_API }}/flows/trigger/333701d7-8690-4574-a9c2-dfc841e6ccd0'
